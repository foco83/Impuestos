import pandas as pd

SATISR2024 = {
    'Meses Laborados': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10, 11, 12, 1, 2, 1, 1, 3, 2, 4, 2, 2, 1, 5, 3, 6, 3, 7, 4, 3, 1, 8, 4, 5, 9, 4, 2, 10, 5, 6, 11, 12, 5, 6, 7, 8, 7, 6, 3, 1, 2, 9, 8, 7, 10, 9, 11, 12, 8, 4, 1, 10, 9, 11, 12, 3, 10, 5, 11, 12, 6, 2, 4, 7, 5, 8, 2, 9, 3, 6, 10, 11, 12, 7, 3, 4, 1, 8, 9, 5, 10, 4, 11, 12, 6, 5, 7, 6, 8, 2, 9, 7, 10, 8, 11, 12, 9, 3, 10, 11, 12, 4, 5, 6, 7, 8, 9, 10, 11, 12],
    'Límite inferior': [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 746.05, 1492.09, 2238.13, 2984.17, 3730.21, 4476.25, 5222.29, 5968.33, 6332.06, 6714.37, 7460.41, 8206.45, 8206.45, 11128.02, 12664.11, 12935.83, 15487.72, 18996.16, 22256.03, 25328.21, 25871.65, 30975.43, 31236.5, 31660.26, 33384.04, 37992.31, 38807.47, 44324.36, 44512.05, 46463.14, 49233.01, 50656.41, 51743.29, 55640.06, 56988.46, 61950.85, 62472.99, 63320.51, 64679.11, 66768.07, 69652.56, 69652.56, 77438.56, 77614.93, 77896.08, 89024.09, 90550.75, 92926.27, 93709.48, 93993.91, 98466.01, 100152.1, 103486.57, 108413.98, 111280.11, 116422.39, 122408.12, 122408.12, 123901.69, 124945.97, 125325.21, 129358.21, 139389.4, 142294.03, 142294.03, 147699.01, 154877.11, 156182.46, 170364.82, 170364.82, 187418.95, 187987.81, 196932.01, 218655.44, 246165.01, 249891.93, 250650.41, 281128.42, 281981.71, 295398.01, 312364.91, 343601.4, 343601.4, 344631.01, 375975.61, 375975.61, 375975.62, 393864.01, 443097.01, 469969.51, 492330.01, 501300.81, 541563.01, 541563.01, 563963.41, 626626.01, 657957.31, 751951.21, 751951.21, 751951.23, 845945.11, 877276.41, 939939.01, 1002601.61, 1033932.91, 1033932.91, 1127926.81, 1127926.84, 1253252.01, 1378577.21, 1378577.21, 1503902.45, 1879878.06, 2255853.67, 2631829.28, 3007804.89, 3383780.5, 3759756.11, 4135731.72, 4135731.72],
    'Cuota Fija': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 14.32, 28.64, 42.96, 57.28, 71.6, 85.92, 100.24, 114.56, 371.83, 128.88, 143.2, 157.52, 157.52, 893.63, 743.66, 1182.88, 1640.18, 1115.49, 1787.26, 1487.32, 2365.76, 3280.36, 5004.12, 1859.15, 2680.89, 2230.98, 3548.64, 2602.81, 3574.52, 4920.54, 9236.89, 2974.64, 4731.52, 4468.15, 3346.47, 6560.72, 10008.24, 3718.3, 5914.4, 5361.78, 4090.13, 4090.13, 8200.9, 7097.28, 6255.41, 7149.04, 8280.16, 9841.08, 15012.36, 22665.17, 18473.78, 8042.67, 9463.04, 11481.26, 8936.3, 10645.92, 9829.93, 9829.93, 13121.44, 20016.48, 32691.18, 11828.8, 14761.62, 13011.68, 13011.68, 27710.67, 16401.8, 25020.6, 13011.68, 13011.68, 30024.72, 45330.34, 36947.56, 35028.84, 46184.45, 40032.96, 65382.36, 45037.08, 67995.51, 55421.34, 50041.2, 55045.32, 55045.32, 64658.23, 98073.54, 90660.68, 117912.32, 73895.12, 83132.01, 113325.85, 92368.9, 130764.72, 101605.79, 101605.79, 135991.02, 163455.9, 158656.19, 196147.08, 181321.36, 235824.64, 203986.53, 228838.26, 226651.7, 261529.44, 249316.87, 249316.87, 294220.62, 353736.96, 326911.8, 359602.98, 359602.98, 471649.28, 589561.6, 707473.92, 825386.24, 943298.56, 1061210.88, 1179123.2, 1297035.52, 1297035.52],
    'porcentaje excedente límite inferior': [0.0192, 0.0192, 0.0192, 0.0192, 0.0192, 0.0192, 0.0192, 0.0192, 0.0192, 0.0192, 0.0192, 0.0192, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.064, 0.10880000000000001, 0.064, 0.064, 0.064, 0.064, 0.16, 0.10880000000000001, 0.17920000000000003, 0.21359999999999998, 0.10880000000000001, 0.16, 0.10880000000000001, 0.17920000000000003, 0.21359999999999998, 0.2352, 0.10880000000000001, 0.16, 0.10880000000000001, 0.17920000000000003, 0.10880000000000001, 0.16, 0.21359999999999998, 0.3, 0.10880000000000001, 0.17920000000000003, 0.16, 0.10880000000000001, 0.21359999999999998, 0.2352, 0.10880000000000001, 0.17920000000000003, 0.16, 0.10880000000000001, 0.10880000000000001, 0.21359999999999998, 0.17920000000000003, 0.16, 0.16, 0.17920000000000003, 0.21359999999999998, 0.2352, 0.32, 0.3, 0.16, 0.17920000000000003, 0.21359999999999998, 0.16, 0.17920000000000003, 0.16, 0.16, 0.21359999999999998, 0.2352, 0.34, 0.17920000000000003, 0.21359999999999998, 0.17920000000000003, 0.17920000000000003, 0.3, 0.21359999999999998, 0.2352, 0.21359999999999998, 0.21359999999999998, 0.2352, 0.32, 0.3, 0.2352, 0.3, 0.2352, 0.34, 0.2352, 0.32, 0.3, 0.2352, 0.2352, 0.2352, 0.3, 0.34, 0.32, 0.35, 0.3, 0.3, 0.32, 0.3, 0.34, 0.3, 0.3, 0.32, 0.34, 0.32, 0.34, 0.32, 0.35, 0.32, 0.34, 0.32, 0.34, 0.32, 0.32, 0.34, 0.35, 0.34, 0.34, 0.34, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35]
    }

# Crear un DataFrame a partir del diccionario
df = pd.DataFrame(SATISR2024)

# Solicitar el valor de la base gravable
base_gravable = float(input("Ingrese el valor de la base gravable: "))

# Solicitar el valor de los meses laborados
meses_laborados = int(input("Ingrese el número de meses laborados: "))

#Aplicar el filtro
filtered_df = df[df['Meses Laborados'] == meses_laborados]

# Verificar si el DataFrame filtrado no está vacío
if not filtered_df.empty:
    # Filtrar los valores en 'limite inferior' que son menores o iguales a 'base_gravable'
    filtered_df = filtered_df[filtered_df['Límite inferior'] <= base_gravable]
    
    # Verificar si hay resultados después del segundo filtro
    if not filtered_df.empty:
        # Calcular la diferencia absoluta entre 'base gravable' y los valores en la columna 'limite inferior'
        filtered_df['Diferencia'] = (base_gravable - filtered_df['Límite inferior']).abs()
        
        # Encontrar la fila con la diferencia mínima
        closest_row = filtered_df.loc[filtered_df['Diferencia'].idxmin()]

        # Mostrar la fila que tiene el valor más cercano hacia abajo en 'limite inferior'
        print(closest_row)

         # Extraer los valores necesarios de 'closest_row'
        diferencia = closest_row['Diferencia']
        porcentaje_excedente = closest_row['porcentaje excedente límite inferior']
        cuota_fija = closest_row['Cuota Fija']

        # Realizar el cálculo: Diferencia * %sobre excedente + Cuota Fija
        resultado = diferencia * porcentaje_excedente + cuota_fija

        # Mostrar el resultado del cálculo
        print(f"Resultado: {resultado}")
    else:
        print("No se encontraron registros con 'Límite inferior' menor o igual a la base gravable especificada.")
else:
    print("No se encontraron registros con los meses laborados especificados.")
